@import "~bulma/sass/utilities/initial-variables";
@import "~bulma/sass/utilities/functions";

// $green: #00B140;
$green: #03BC25;
$green-invert: findColorInvert($green);

$blue: #3689e1;
$blue-invert: findColorInvert($blue);
$orange: #ea9e00;
$orange-invert: findColorInvert($orange);

// $text: $white-ter;
$text: $grey-darker;

$primary: $green;
$link: $primary;
$link-invert: $green-invert;
$link-hover: $text;
$link-focus: $white;
$link-active: $white;
$dark: $black-bis;
$light: $white-ter;


$warning: $orange;
$warning-invert: $orange-invert;

$family-sans-serif: 'Montserrat', sans-serif;
$family-title: 'Montserrat', 'Frank Ruhl Libre', serif;
$family-subtitle: 'Space Mono', sans-serif;

$title-weight: 500;
$subtitle-weight: $weight-normal;

$title-color: $text;
$subtitle-color: $primary;

$content-heading-color: $text;
$content-heading-weight: 500;

$radius: 0;
$small-radius: 0;


// Derived variables

@import "~bulma/sass/utilities/derived-variables";

$body-background-color: $dark;

$navbar-height: 6.25rem;
$navbar-item-img-max-height: $navbar-height;
$navbar-padding-vertical: 0;
$navbar-padding-horizontal: 0;

// $navbar-item-hover-color: transparent;
// $navbar-item-active-color: transparent;
$navbar-item-hover-background-color: $primary;
$navbar-item-active-background-color: $text;

.subtitle, .content .subtitle {
    font-family: $family-subtitle;
    // text-transform: uppercase;
    //letter-spacing: 1px;
    font-weight: 400;
    color: $primary;
}

// Workaround because for some reason it's complaining that
// this variable doesn't exist
$column-gap: 0.75rem;


// Custom CSS

@import "~bulma/sass/utilities/mixins";


p a:hover {
    text-decoration: underline;
}

.is-light {
    background: $light;
}
.is-white {
    background: $white;
}
.is-primary {
    background: $primary;
}
.is-success {
    background: $success;
}

.section.is-content {
    padding: 3rem 2rem;
}

.tag {
    font-weight: 500;
}


// CV STUFF

.cv-entry,
.cv-skill,
.cv-award {
  display: grid;
  grid-column-gap: $column-gap * 2;
  grid-template-rows: auto;
  grid-template-columns: [sidebar] 9rem [main] 1fr;
  .cv-sidebar {
    grid-column: sidebar;
    text-align: right;
  }
  .cv-main {
    grid-column: main;
  }
  .cv-task {
    display: block;
    position: relative;
    padding-left: calc(0.5rem + 1.25em);
    .mdi,
    .fa {
      position: absolute;
      left: 0.5rem;
    }
  }
}
.cv-entry,
.cv-skill {
  margin-bottom: 1rem;
  grid-template-columns: [sidebar] 9rem [bar] auto [main] 1fr;
  grid-column-gap: $column-gap;
  .cv-bar {
    width: 2px;
    height: 100%;
    grid-column: bar;
    grid-row: 1 / 5;
    background-color: $primary;
  }
}

// LAYOUT: ALT
.hero {
  .title.is-0 {
    padding-left: $gap;
    text-transform: uppercase;
    font-size: 90px;
    display: inline-block;
    letter-spacing: 2px;
    color: $light;
    @include mobile {
      font-size: 13vw;
    }
  }
  .to-rest {
    font-size: 72px;
  }
  &.bg-img {
    background-image: url(/imgs/stars.jpg);
    background-position: center center;
    background-repeat: no-repeat;
    background-attachment: fixed;
    background-size: cover;
  }
}
#does-things {
  display: flex;
  align-items: center;
  padding-left: $gap;
  &.subtitle {
    line-height: 1em;
    font-size: 60px;
    &.vue-typer {
      .custom.char {
        color: $primary;
      }
      .custom.caret {
        background-color: $primary;
        width: 0.5em;
        height: 0.8em;
        vertical-align: bottom;
        margin: 0.1em 0.05em;
      }
    }
  }
}

// COMPONENT : NAVBAR
.square-nav {
  .navbar-item {
    padding: 0;
    margin: 0 0.5rem;
    background-color: $primary;
    // http://tobiasahlin.com/blog/how-to-animate-box-shadow/
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15);
    transition: all 0.6s cubic-bezier(0.165, 0.84, 0.44, 1);
    &::after {
          content: "";
          position: absolute;
          z-index: -1;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
          opacity: 0;
          transition: all 0.6s cubic-bezier(0.165, 0.84, 0.44, 1);
        }
        &:hover {
          transform: scale(1.15, 1.15);
        }

        &:hover::after {
            opacity: 1;
        }
    img {
      transition: all 0.3s ease-in-out;
      height: $navbar-height;
      // &:hover {transform: scale(1.1, 1.1);}
    }
  }
}

// PAGE : INDEX
$icon-block-size: 8rem;
$icon-block-size-touch: 6rem;
.container.is-narrow {
  max-width: 1000px;
}

.section.is-block {
  padding-top: 6rem;
  padding-bottom: 6rem;
  @include mobile {
    padding-bottom: 3rem;
  }

  .section.is-unpadded {
    // Makes the space colored and only adds padding to keep from hitting the
    // icon on the top on mobile. Otherwise, padding is taken care of by the
    // children so it's possible to have content that goes to the edges
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15);
    margin-left: $icon-block-size / 2;
    padding: 0;
    @include tablet-only {
      margin-left: $icon-block-size-touch / 2;
    }
    @include mobile {
      margin-left: 0;
      padding-top: $icon-block-size-touch/2 + 1.5rem;
    }
  }

  .section.is-block-content {
    &:not(:first-child) {margin-top: 0;}
    @include desktop {
      padding-left: $icon-block-size / 2 + 2rem;
    }
    @include tablet-only {
      padding-left: $icon-block-size-touch / 2 + 1.5rem;
    }
    @include mobile {
      &:not(:first-child) {margin-top: 0;}
    }
  }

  .icon-block {
    z-index: 30;
    position: absolute;
    width: $icon-block-size;
    height: $icon-block-size;
    top: 3rem;
    left: 0;
    background-color: $primary;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15);
    @include touch {
      width: $icon-block-size-touch;
      height: $icon-block-size-touch;
    }
    @include mobile {
      top: -0.5 * $icon-block-size-touch;
      // left: calc(50% - #{$icon-block-size-touch}/2);
      left: 3rem;
    }
  }
  .title.is-1 {
    font-size: 4rem;
    @include tablet {font-size: 3rem;}
    @include mobile {font-size: 2rem;}
  }

}

  .flexy {
    // margin: $gap 0;
    display: flex;
    flex-direction: row;
    @include mobile {
      flex-direction: column;
    }
    .grid-img {
      width: 35%;
    }
    .grid-content {
      width: 65%;
      padding: 0 $gap;
    }
    &.img-right {
      flex-direction: row-reverse;
    }
  }
  .title.is-1,
  .title.is-2 {
    text-transform: uppercase;
    letter-spacing: 2px;
  }

@import "~bulma/bulma";